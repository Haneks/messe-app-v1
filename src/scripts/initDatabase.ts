#!/usr/bin/env node

/**
 * SCRIPT D'INITIALISATION DE LA BASE DE DONN√âES
 * ============================================
 * 
 * Script pour cr√©er et initialiser la base de donn√©es
 * Peut √™tre ex√©cut√© en ligne de commande
 */

import { DatabaseManager } from '../database/DatabaseManager';
import { FileImportService } from '../services/FileImportService';
import { existsSync, mkdirSync } from 'fs';
import { join } from 'path';

async function initializeDatabase() {
  console.log('üöÄ Initialisation de la base de donn√©es de chants liturgiques...\n');

  try {
    // Cr√©er les r√©pertoires n√©cessaires
    const directories = ['./data', './uploads', './backups'];
    directories.forEach(dir => {
      if (!existsSync(dir)) {
        mkdirSync(dir, { recursive: true });
        console.log(`üìÅ R√©pertoire cr√©√©: ${dir}`);
      }
    });

    // Initialiser la base de donn√©es
    const dbManager = DatabaseManager.getInstance('./data/songs.db');
    console.log('‚úÖ Base de donn√©es initialis√©e');

    // Afficher les statistiques initiales
    const stats = dbManager.getStatistics();
    console.log('\nüìä Statistiques initiales:');
    console.log(`   - Total des chants: ${stats.totalSongs}`);
    console.log(`   - Chants par cat√©gorie:`, stats.songsByCategory);
    console.log(`   - Imports r√©cents: ${stats.recentImports}`);

    // Test d'importation si des fichiers d'exemple existent
    const exampleFiles = ['./examples/chants.txt', './examples/chants.docx'];
    const importService = new FileImportService();

    for (const filePath of exampleFiles) {
      if (existsSync(filePath)) {
        console.log(`\nüì• Test d'importation: ${filePath}`);
        
        try {
          const result = await importService.importFile(filePath, {
            autoDetectCategory: true,
            skipDuplicates: true
          });

          if (result.success) {
            console.log(`   ‚úÖ ${result.totalImported}/${result.totalFound} chants import√©s`);
          } else {
            console.log(`   ‚ùå √âchec d'importation:`, result.errors);
          }
        } catch (error) {
          console.log(`   ‚ö†Ô∏è  Erreur d'importation:`, error);
        }
      }
    }

    // Statistiques finales
    const finalStats = dbManager.getStatistics();
    console.log('\nüìä Statistiques finales:');
    console.log(`   - Total des chants: ${finalStats.totalSongs}`);
    console.log(`   - Chants par cat√©gorie:`, finalStats.songsByCategory);

    console.log('\nüéâ Initialisation termin√©e avec succ√®s!');
    console.log('\nüìù Prochaines √©tapes:');
    console.log('   1. Placez vos fichiers .txt ou .docx dans le dossier ./uploads/');
    console.log('   2. Utilisez l\'API POST /api/songs/import pour importer');
    console.log('   3. Consultez les chants via GET /api/songs/search');

  } catch (error) {
    console.error('‚ùå Erreur lors de l\'initialisation:', error);
    process.exit(1);
  }
}

// Ex√©cuter si appel√© directement
if (require.main === module) {
  initializeDatabase();
}

export { initializeDatabase };